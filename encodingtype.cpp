#include "encodingtype.h"

const std::map<int, char> EncodingType::_CP866 = {

    {128, 'А'}, {143, 'П'}, {158, 'Ю'}, {173, 'н'}, {233, 'щ'}, {132, 'Д'},
    {129, 'Б'}, {144, 'Р'}, {159, 'Я'}, {174, 'о'}, {234, 'ъ'}, {133, 'Е'},
    {130, 'В'}, {145, 'С'}, {160, 'а'}, {175, 'п'}, {235, 'ы'}, {134, 'Ж'},
    {131, 'Г'}, {146, 'Т'}, {161, 'б'}, {224, 'р'}, {236, 'ь'}, {147, 'У'},
    {135, 'З'}, {150, 'Ц'}, {165, 'е'}, {225, 'с'}, {237, 'э'}, {148, 'Ф'},
    {136, 'И'}, {151, 'Ч'}, {166, 'ж'}, {226, 'т'}, {238, 'ю'}, {149, 'Х'},
    {137, 'Й'}, {152, 'Ш'}, {167, 'з'}, {227, 'у'}, {239, 'я'},
    {138, 'К'}, {153, 'Щ'}, {168, 'и'}, {228, 'ф'}, {240, 'Ё'},
    {139, 'Л'}, {154, 'Ъ'}, {169, 'й'}, {229, 'х'}, {241, 'ё'},
    {140, 'М'}, {155, 'Ы'}, {170, 'к'}, {230, 'ц'}, {162, 'в'},
    {141, 'Н'}, {156, 'Ь'}, {171, 'л'}, {231, 'ч'}, {163, 'г'},
    {142, 'О'}, {157, 'Э'}, {172, 'м'}, {232, 'ш'}, {164, 'д'}
};

const std::map<int, char> EncodingType::_KOI8 = {

    {163, 'ё'}, {203, 'к'}, {215, 'в'}, {227, 'Ц'}, {239, 'О'}, {251, 'Ш'},
    {192, 'ю'}, {204, 'л'}, {216, 'ь'}, {228, 'Д'}, {240, 'П'}, {252, 'Э'},
    {193, 'а'}, {205, 'м'}, {217, 'ы'}, {229, 'Е'}, {241, 'Я'}, {253, 'Щ'},
    {194, 'б'}, {206, 'н'}, {218, 'з'}, {230, 'Ф'}, {242, 'Р'}, {254, 'Ч'},
    {195, 'ц'}, {207, 'о'}, {219, 'ш'}, {231, 'Г'}, {243, 'С'}, {255, 'Ъ'},
    {196, 'д'}, {208, 'п'}, {220, 'э'}, {232, 'Х'}, {244, 'Т'}, {179, 'Ё'},
    {197, 'е'}, {209, 'я'}, {221, 'щ'}, {233, 'И'}, {245, 'У'},
    {198, 'ф'}, {210, 'р'}, {222, 'ч'}, {234, 'Й'}, {246, 'Ж'},
    {199, 'г'}, {211, 'с'}, {223, 'ъ'}, {235, 'К'}, {247, 'В'},
    {200, 'х'}, {212, 'т'}, {224, 'Ю'}, {236, 'Л'}, {248, 'Ь'},
    {201, 'и'}, {213, 'у'}, {225, 'А'}, {237, 'М'}, {249, 'Ы'},
    {202, 'й'}, {214, 'ж'}, {226, 'Б'}, {238, 'Н'}, {250, 'З'}
};


char EncodingType::getSymbolFromCP866(const int numCoding) {

    if(_CP866.find(numCoding) != _CP866.end())
        return _CP866.at(numCoding);

    return static_cast<char>(numCoding);
}

char EncodingType::getSymbolFromKOI8(const int numCoding) {

    if(_KOI8.find(numCoding) != _KOI8.end())
        return _KOI8.at(numCoding);

    return static_cast<char>(numCoding);
}

